services:
  traefik:
    image: traefik:v3.2.1
    container_name: traefik
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true" # Enable the dashboard
      - "--log.level=INFO"
      - "--providers.file.filename=/dynamic/dynamic.yml"
      - "--metrics.prometheus=true" # Enable Prometheus metrics
      - "--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8899"
      - "--metrics.prometheus.entryPoint=metrics"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certs:/certs:ro
      - ./traefik/dynamic.yml:/dynamic/dynamic.yml:ro
      - ./traefik/data:/data:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.quest.local`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls=true"

  arangodb:
    ports:
      - 8529:8529 # Exposing this port is useful for CLI tools (e.g. arangodump)
    image: arangodb:latest
    container_name: arangodb
    secrets:
      - arango_root_password
    environment:
      ARANGO_ROOT_PASSWORD_FILE: /run/secrets/arango_root_password
    volumes:
      - ./arangodb/volumes/data:/var/lib/arangodb3
      - ./arangodb/volumes/apps:/var/lib/arangodb3-apps
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arangodb.rule=Host(`arangodb.quest.local`)"
      - "traefik.http.routers.arangodb.entrypoints=websecure"
      - "traefik.http.routers.arangodb.tls=true"
      - "traefik.http.services.arangodb.loadbalancer.server.port=8529"

  minio:
    image: quay.io/minio/minio
    container_name: minio
    secrets:
      - minio_root_password
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD_FILE: /run/secrets/minio_root_password
    volumes:
      - ./minio/volume:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"

      # API Route
      - "traefik.http.routers.minio-api.rule=Host(`minio.quest.local`)"
      - "traefik.http.routers.minio-api.entrypoints=websecure"
      - "traefik.http.routers.minio-api.tls=true"
      - "traefik.http.routers.minio-api.service=minio-api-service"
      - "traefik.http.services.minio-api-service.loadbalancer.server.port=9000"

      # Console Route
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.quest.local`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.routers.minio-console.service=minio-console-service"
      - "traefik.http.services.minio-console-service.loadbalancer.server.port=9001"

  web:
    image: simply-the-quest-web:latest
    build:
      context: ../../
      dockerfile: apps/frontend/Dockerfile
    container_name: stq-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.quest.local`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.services.web.loadbalancer.server.port=3000"

  web-api:
    image: simply-the-quest-web-api:latest
    build:
      context: ../../apps/backend/
    container_name: stq-web-api
    secrets:
      - arango_root_password
      - jwt_access_token_secret
      - jwt_refresh_token_secret
    environment:
      ARANGODB_USER: root
      ARANGODB_HOST: http://arangodb:8529
      ARANGODB_PASS: /run/secrets/arango_root_password
      TRUSTED_PROXIES: 172.21.0.0/16 # Trust the internal docker network
      JWT_ACCESS_TOKEN_SECRET: /run/secrets/jwt_access_token_secret
      JWT_REFRESH_TOKEN_SECRET: /run/secrets/jwt_refresh_token_secret
      JWT_DOMAIN: "api.quest.local"
      GIN_MODE: debug # disable in production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapi.rule=Host(`api.quest.local`)"
      - "traefik.http.routers.webapi.entrypoints=websecure"
      - "traefik.http.routers.webapi.tls=true"
      - "traefik.http.services.webapi.loadbalancer.server.port=8080"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.quest.local`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    secrets:
      - grafana_root_password
    volumes:
      - ./grafana/config:/etc/grafana
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_root_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.quest.local`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

secrets:
  arango_root_password:
    file: ./secrets/arangodb_root_password
  minio_root_password:
    file: ./secrets/minio_root_password
  jwt_access_token_secret:
    file: ./secrets/jwt_access_token_secret
  jwt_refresh_token_secret:
    file: ./secrets/jwt_refresh_token_secret
  grafana_root_password:
    file: ./secrets/grafana_root_password
